local vim = game:GetService("VirtualInputManager")
local player = game.Players.LocalPlayer

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "TestKeyboardSim"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = player:WaitForChild("PlayerGui")

-- Lock toggle
local unlocked = false

-- Create lock/unlock button
local lockButton = Instance.new("TextButton")
lockButton.Size = UDim2.new(0, 80, 0, 30)
lockButton.Position = UDim2.new(0, 0, 0, 180)
lockButton.Text = "ðŸ”’ Lock"
lockButton.Font = Enum.Font.GothamBold
lockButton.TextScaled = true
lockButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
lockButton.TextColor3 = Color3.new(1, 1, 1)
lockButton.BorderSizePixel = 0
lockButton.Parent = gui
Instance.new("UICorner", lockButton).CornerRadius = UDim.new(1, 0)

lockButton.MouseButton1Click:Connect(function()
	unlocked = not unlocked
	lockButton.Text = unlocked and "ðŸ”“ Unlock" or "ðŸ”’ Lock"
end)

-- Key definitions
local keys = {
	{Key = "W", KeyCode = Enum.KeyCode.W, Pos = UDim2.new(0, 100, 1, -180)},
	{Key = "A", KeyCode = Enum.KeyCode.A, Pos = UDim2.new(0, 50, 1, -120)},
	{Key = "S", KeyCode = Enum.KeyCode.S, Pos = UDim2.new(0, 100, 1, -120)},
	{Key = "D", KeyCode = Enum.KeyCode.D, Pos = UDim2.new(0, 150, 1, -120)},
}

-- Create each key button
for _, info in ipairs(keys) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 80, 0, 80)
	btn.Position = info.Pos
	btn.Text = info.Key
	btn.Font = Enum.Font.GothamBold
	btn.TextScaled = true
	btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.BorderSizePixel = 0
	btn.Parent = gui

	Instance.new("UICorner", btn).CornerRadius = UDim.new(1, 0)
	local stroke = Instance.new("UIStroke", btn)
	stroke.Color = Color3.new(1, 1, 1)
	stroke.Thickness = 1.5

	-- Keyboard input trigger
	btn.MouseButton1Down:Connect(function()
		if not unlocked then
			vim:SendKeyEvent(true, info.KeyCode, false, game)
		end
	end)

	btn.MouseButton1Up:Connect(function()
		if not unlocked then
			vim:SendKeyEvent(false, info.KeyCode, false, game)
		end
	end)

	-- Dragging (when unlocked)
	local dragging = false
	local dragStart, startPos

	btn.InputBegan:Connect(function(input)
		if unlocked and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1) then
			dragging = true
			dragStart = input.Position
			startPos = btn.Position
		end
	end)

	btn.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
			local delta = input.Position - dragStart
			btn.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
				startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	btn.InputEnded:Connect(function(input)
		if dragging then
			dragging = false
		end
	end)
end
